#!/usr/bin/env php
<?php

if (PHP_MAJOR_VERSION < 7) {
    echo 'PHP 7.0 or higher is required to work with this tool. Yii 3.0 requires PHP 7.1!' . PHP_EOL;
    exit(1);
}
if (!isset($argv)) {
    $argv = $_SERVER['argv'];
}
define('ENABLE_COLOR', DIRECTORY_SEPARATOR === '\\'
    ? getenv('ANSICON') !== false || getenv('ConEmuANSI') === 'ON'
    : function_exists('posix_isatty') && @posix_isatty(STDOUT) && @posix_isatty(STDERR)
);

/**
 * @param string $text the text to print.
 * @param int|null $color color according to https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit
 */
function ansicolor(string $text, int $color = null): string
{
    if ($color !== null && ENABLE_COLOR) {
        return "\e[{$color}m$text\e[0m";
    }
    return $text;
}

function stdout(string $text, int $color = null): void
{
    fwrite(STDOUT, ansicolor($text, $color));
}

function stdoutln(string $text, int $color = null): void
{
    stdout(ansicolor($text, $color) . PHP_EOL);
}

function stderr(string $text, int $color = null): void
{
    fwrite(STDERR, ansicolor($text, $color));
}

function stderrln(string $text, int $color = null): void
{
    stderr(ansicolor($text, $color) . PHP_EOL, $color);
}

function help()
{
    global $argv;

    stderrln(<<<YII
  _   _  _  _ 
 | | | |(_)(_)
 | |_| || || |  Development Tool
  \__, ||_||_|
  |___/         for Yii 3.0

YII
    );
    stderrln('This tools helps with setting up a development environment for Yii 3 packages.');
    stderrln('');
    stderrln('Usage: ' . ($argv[0] ?? 'yii-dev') . ' <command>');
    stderrln('');
    stderrln('Available Commands:');
    stderrln('');

    stderr('  install', 33);
    stderrln("             Install all packages listed in packages.php");

    stderr('  install', 33);
    stderr(' <package>', 34);
    stderrln("   Install a single package. <package> refers to the array key in packages.php");

    stderr('  status', 33);
    stderrln("              Show stats summary about all packages.");

    stderr('  lint', 33);
    stderrln("                Check packages for common mistakes.");
    stderrln('');
}

$command = $argv[1] ?? 'help';

switch ($command) {
    case 'install':

        require __DIR__ . '/commands/InstallCommand.php';
        $command = new \yiidev\commands\InstallCommand($argv[2] ?? null);
        $command->run();

        break;
    case 'status':

        // TODO implement
        stderrln('Not implemented yet!', 31);

        break;
    case 'lint':

        // TODO implement
        stderrln('Not implemented yet!', 31);

        break;
    default:
        help();
        exit(1);
}
